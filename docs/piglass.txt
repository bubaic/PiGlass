Class and Function descriptions for piglass.py

SECTION 0: How to read this document

DNC: Do Not Call, e.g. do not call this function/class in your program.
DEP: Deprecated, use something else.
BUG: Buggy and not fully working.
TMP: Temporarily defined.
NCP: Not complete yet.
NRC: Not reccomended to call.

<text>: Variable text supplied as argument used in description

SECTION 1: IMPORTED MODULES

thread - Multithreading support
pygame - Graphics
os     - Operating system internals
GPIO   - Raspberry Pi GPIO interface TMP imports FAKE_GPIO

SECTION 2: FUNCTIONS

initialize():
	DNC
	Initializes graphics, GPIO, and other variables.

getNotification():
	Returns the currently displayed notification or None.

getValidModule(str path):
	Returns a valid module imported from <path>

strToBool(str s):
	Returns True if <s> is "True" and False if <s> is "False"

getStopped():
	Returns True if the system is halting or False if it is running.

getAppScreen():
	Returns the pygame.Surface that apps should draw on.

getScreen():
	NRC Returns the pygame.Surface of the WHOLE screen.

getApp(str name):
	DEP? Returns the piglass.PGApp object of the app with name <name>.

setAppText(str text):
	Sets the appText variable (displayed in the grey bottom bar) to <text>.

setStopped(bool state):
	NRC Sets the halt state to <state>

readFile(str path):
	Returns a list of strings that are lines read from <path>.

startApp(str path, bool populate=True):
	NRC Starts the app from the directory <path> and populates it if selected.

fStrip(str a, str b):
	Returns <b> with <a> stripped from the front.

activateApp(piglass.PGApp ao):
	Activates <ao>

startBGTask(str path):
	Starts a new background task from the module derived from <path>.

getAppByName(str name):
	Returns the piglass.PGApp object of the app with name <name>.

getAppByDisplayName(str dname):
	Returns the piglass.PGApp object of the app with displayName <dname>.

closeApp():
	NRC DNC Closes the currently active app PERMANENTLY.

closeBGTask(str path):
	Closes the background task that was started from <path>.

populateAppObject(piglass.PGApp ao):
	NRC Populates the app from its module.

render_textrect(str string, pygame.font.Font font, pygame.Rect rect, list text_color=[200, 200, 200], list background_color=[50, 50, 50], int justification=0):
	Returns a pygame.Surface with <string> wordwrapped into it in <font> in the color <text_color> with <background_color> justified <justification>.

installApp(str path):
	DNC Installs an app from <path>

uninstallApp(str name):
	DNC Uninstalls the app named <name>.

checkUpdate(name):
	NRC Returns True and the update package path if an update is available for the <name>d app.

updateAll():
	NRC Updates all apps that are currently installed.

installRemote(str pth):
	DNC Installs an app from the server.

getPackageFromDisplayName(str dname):
	NRC Gets the package URL from the server via display name.

class EventManager:
	NRC An EventManager is the controller governing inputs to PiGlass.

class ThreadManager:
	NRC
	A ThreadManager controls level-0 and level-1 subthreads.
    	PiGlass Apps are level-1 threads controlling PGApp Objects.
    	Background Monitors are level-0 threads started by ThreadManager.

class PGApp:
	NRC
	A PGApp is the main part of constructing a PiGlass app. 
    	It has three states: running, paused, and not running. Each of these has its own trigger.
    	A PGApp is initialized by the system by parameters from the apps manifest.
    	The system then calls the defined init funtion.
	
class ResourcePack:
	A ResourePack is a preloaded object with all the resources for an app.
    	It loads images as pygame.image objects and text files as lists of strings.
	